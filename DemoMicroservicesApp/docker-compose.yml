version: '3.4'

services:
  inventory:
    build:
      context: .
      dockerfile: Inventory/Dockerfile
    ports:
      - "5244:5244"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      inventory.database:
        condition: service_healthy
      demo-rabbitmq:
        condition: service_healthy

  inventory.database:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "dusanPassword9&7!"
      MSSQL_PID: "Express"
    ports:
      - "1436:1433"
    volumes:
      - inventory_data:/var/opt/mssql
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-Usa", "-PdusanPassword9&7!", "-Q", "select 1"]
      interval: 2s
      retries: 10

  user:
    build:
      context: .
      dockerfile: User/Dockerfile
    ports:
      - "5167:5167"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      user.database:
        condition: service_healthy
      demo-rabbitmq:
        condition: service_healthy

  user.database:
    image: "mcr.microsoft.com/mssql/server"
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "dusanPassword9&7!"
      MSSQL_PID: "Express"
    ports:
      - "1437:1433"
    volumes:
      - user_data:/var/opt/mssql
    healthcheck:
      test: ["CMD", "/opt/mssql-tools/bin/sqlcmd", "-Usa", "-PdusanPassword9&7!", "-Q", "select 1"]
      interval: 2s
      retries: 10

  demo-rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 8088:15672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 2s
      timeout: 30s
      retries: 10

volumes:
  inventory_data:
  user_data:
